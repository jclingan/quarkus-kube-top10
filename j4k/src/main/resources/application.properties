# Configuration file
# key = value

greeting=Kube Hello

# Remote development

quarkus.package.type=mutable-jar
quarkus.live-reload.password=abc123
quarkus.kubernetes.env.vars.QUARKUS_LAUNCH_DEVMODE.value=true

# Database Configuration
# db.user and db.pass property expansion from kube secret j4k-secret map

quarkus.datasource.db-kind=postgresql
#quarkus.datasource.jdbc.url=jdbc:postgresql://postgres:5432/quarkus
quarkus.datasource.username=${db.user}
quarkus.datasource.password=${db.pass}

quarkus.hibernate-orm.sql-load-script=import.sql
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.database.generation=drop-and-create

# Enable Health UI
quarkus.smallrye-health.ui.enable=true
quarkus.smallrye-health.ui.always-include=true

# Health Probe configuration
quarkus.kubernetes.liveness-probe.initial-delay=10
quarkus.kubernetes.liveness-probe.period=2
quarkus.kubernetes.liveness-probe.timeout=5

quarkus.kubernetes.readiness-probe.initial-delay=10
quarkus.kubernetes.readiness-probe.period=2
quarkus.kubernetes.readiness-probe.timeout=5

# Kubernetes Config Map

quarkus.kubernetes-config.enabled=true
quarkus.kubernetes-config.config-maps=j4k

# Secrets

quarkus.kubernetes-config.secrets.enabled=true
quarkus.kubernetes-config.secrets=j4k-secret

# KNative
#quarkus.container-image.registry=quay.io
#quarkus.kubernetes-client.trust-certs=true
#quarkus.knative.service-account=j4k
#quarkus.knative.containers.j4k.service-account=j4k
#quarkus.knative.env.configmaps=j4k
#quarkus.knative.env.secrets=j4k-secret

# Jaeger

quarkus.jaeger.service-name=j4k
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n
quarkus.kubernetes.annotations."sidecar.jaegertracing.io/inject"=true
quarkus.datasource.jdbc.driver=io.opentracing.contrib.jdbc.TracingDriver
quarkus.datasource.jdbc.url=jdbc:tracing:postgresql://postgres:5432/quarkus
# configure Hibernate dialect
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect


